{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { getAuth, RecaptchaVerifier, signInWithPhoneNumber } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC6BDR8vZuUHiqt7VQkhLJ3pxYroNNjntA\",\n  authDomain: \"ecom-chat-1d35c.firebaseapp.com\",\n  projectId: \"ecom-chat-1d35c\",\n  storageBucket: \"ecom-chat-1d35c.appspot.com\",\n  messagingSenderId: \"517909678281\",\n  appId: \"1:517909678281:web:ee31dcdc6180e6a3cee518\",\n  measurementId: \"G-3X0P8VH3KR\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;\nexport const authentication = getAuth(initializeApp(firebaseConfig));\nexport const auth = getAuth(); // Cấu hình RecaptchaVerifier\n\nexport const generateRecaptcha = () => {\n  window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n    'size': 'invisible',\n    'callback': response => {// reCAPTCHA solved\n    }\n  }, auth);\n}; // Hàm gửi OTP\n\nexport const requestOTP = async phoneNumber => {\n  try {\n    const appVerifier = window.recaptchaVerifier;\n    const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, appVerifier);\n    window.confirmationResult = confirmationResult;\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}; // Hàm verify OTP\n\nexport const verifyOTP = async otp => {\n  try {\n    const confirmationResult = window.confirmationResult;\n    const result = await confirmationResult.confirm(otp);\n    return result.user;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};","map":{"version":3,"names":["firebase","getAuth","RecaptchaVerifier","signInWithPhoneNumber","initializeApp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authentication","auth","generateRecaptcha","window","recaptchaVerifier","response","requestOTP","phoneNumber","appVerifier","confirmationResult","error","console","verifyOTP","otp","result","confirm","user"],"sources":["C:/Users/MCOM/Desktop/DATN/fullstack/frontend/src/utils/firebase.js"],"sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport { getAuth, RecaptchaVerifier, signInWithPhoneNumber } from 'firebase/auth';\r\nimport { initializeApp } from 'firebase/app';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC6BDR8vZuUHiqt7VQkhLJ3pxYroNNjntA\",\r\n  authDomain: \"ecom-chat-1d35c.firebaseapp.com\",\r\n  projectId: \"ecom-chat-1d35c\",\r\n  storageBucket: \"ecom-chat-1d35c.appspot.com\",\r\n  messagingSenderId: \"517909678281\",\r\n  appId: \"1:517909678281:web:ee31dcdc6180e6a3cee518\",\r\n  measurementId: \"G-3X0P8VH3KR\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n\r\nexport const authentication = getAuth(initializeApp(firebaseConfig));\r\nexport const auth = getAuth();\r\n\r\n// Cấu hình RecaptchaVerifier\r\nexport const generateRecaptcha = () => {\r\n  window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\r\n    'size': 'invisible',\r\n    'callback': (response) => {\r\n      // reCAPTCHA solved\r\n    }\r\n  }, auth);\r\n}\r\n\r\n// Hàm gửi OTP\r\nexport const requestOTP = async (phoneNumber) => {\r\n  try {\r\n    const appVerifier = window.recaptchaVerifier;\r\n    const confirmationResult = await signInWithPhoneNumber(auth, phoneNumber, appVerifier);\r\n    window.confirmationResult = confirmationResult;\r\n    return true;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return false;\r\n  }\r\n}\r\n\r\n// Hàm verify OTP\r\nexport const verifyOTP = async (otp) => {\r\n  try {\r\n    const confirmationResult = window.confirmationResult;\r\n    const result = await confirmationResult.confirm(otp);\r\n    return result.user;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return null;\r\n  }\r\n}\r\n\r\n\r\n"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,SAASC,OAAT,EAAkBC,iBAAlB,EAAqCC,qBAArC,QAAkE,eAAlE;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,iCAFS;EAGrBC,SAAS,EAAE,iBAHU;EAIrBC,aAAa,EAAE,6BAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE,2CANc;EAOrBC,aAAa,EAAE;AAPM,CAAvB,C,CAUA;;AACAZ,QAAQ,CAACI,aAAT,CAAuBC,cAAvB;AACA,eAAeL,QAAf;AAEA,OAAO,MAAMa,cAAc,GAAGZ,OAAO,CAACG,aAAa,CAACC,cAAD,CAAd,CAA9B;AACP,OAAO,MAAMS,IAAI,GAAGb,OAAO,EAApB,C,CAEP;;AACA,OAAO,MAAMc,iBAAiB,GAAG,MAAM;EACrCC,MAAM,CAACC,iBAAP,GAA2B,IAAIf,iBAAJ,CAAsB,qBAAtB,EAA6C;IACtE,QAAQ,WAD8D;IAEtE,YAAagB,QAAD,IAAc,CACxB;IACD;EAJqE,CAA7C,EAKxBJ,IALwB,CAA3B;AAMD,CAPM,C,CASP;;AACA,OAAO,MAAMK,UAAU,GAAG,MAAOC,WAAP,IAAuB;EAC/C,IAAI;IACF,MAAMC,WAAW,GAAGL,MAAM,CAACC,iBAA3B;IACA,MAAMK,kBAAkB,GAAG,MAAMnB,qBAAqB,CAACW,IAAD,EAAOM,WAAP,EAAoBC,WAApB,CAAtD;IACAL,MAAM,CAACM,kBAAP,GAA4BA,kBAA5B;IACA,OAAO,IAAP;EACD,CALD,CAKE,OAAOC,KAAP,EAAc;IACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;IACA,OAAO,KAAP;EACD;AACF,CAVM,C,CAYP;;AACA,OAAO,MAAME,SAAS,GAAG,MAAOC,GAAP,IAAe;EACtC,IAAI;IACF,MAAMJ,kBAAkB,GAAGN,MAAM,CAACM,kBAAlC;IACA,MAAMK,MAAM,GAAG,MAAML,kBAAkB,CAACM,OAAnB,CAA2BF,GAA3B,CAArB;IACA,OAAOC,MAAM,CAACE,IAAd;EACD,CAJD,CAIE,OAAON,KAAP,EAAc;IACdC,OAAO,CAACD,KAAR,CAAcA,KAAd;IACA,OAAO,IAAP;EACD;AACF,CATM"},"metadata":{},"sourceType":"module"}