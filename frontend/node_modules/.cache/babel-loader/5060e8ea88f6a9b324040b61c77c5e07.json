{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport { getAuth } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC6BDR8vZuUHiqt7VQkhLJ3pxYroNNjntA\",\n  authDomain: \"ecom-chat-1d35c.firebaseapp.com\",\n  projectId: \"ecom-chat-1d35c\",\n  storageBucket: \"ecom-chat-1d35c.appspot.com\",\n  messagingSenderId: \"517909678281\",\n  appId: \"1:517909678281:web:ee31dcdc6180e6a3cee518\",\n  measurementId: \"G-3X0P8VH3KR\"\n}; // Initialize Firebase\n// firebase.initializeApp(firebaseConfig)\n// export default firebase;\n// export const authentication = getAuth(initializeApp(firebaseConfig))\n// Thiết lập reCAPTCHA để xác thực OTP\n\nconst setupRecaptcha = () => {\n  window.recaptchaVerifier = new RecaptchaVerifier(auth, 'recaptcha-container', {\n    size: 'invisible',\n    callback: response => {\n      console.log(\"reCAPTCHA resolved\", response);\n    }\n  });\n}; // Hàm gửi OTP đến số điện thoại\n\n\nexport const sendOTP = phoneNumber => {\n  setupRecaptcha();\n  const appVerifier = window.recaptchaVerifier;\n  signInWithPhoneNumber(auth, phoneNumber, appVerifier).then(confirmationResult => {\n    window.confirmationResult = confirmationResult;\n    console.log(\"OTP sent to\", phoneNumber);\n  }).catch(error => {\n    console.error(\"Error sending OTP:\", error);\n  });\n}; // Hàm xác thực OTP\n\nexport const verifyOTP = otp => {\n  if (window.confirmationResult) {\n    window.confirmationResult.confirm(otp).then(result => {\n      console.log(\"User signed in successfully:\", result.user);\n    }).catch(error => {\n      console.error(\"OTP verification failed:\", error);\n    });\n  } else {\n    console.error(\"No OTP confirmation available.\");\n  }\n};\nexport default firebase;\nexport const authentication = auth;","map":{"version":3,"names":["firebase","getAuth","initializeApp","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","setupRecaptcha","window","recaptchaVerifier","RecaptchaVerifier","auth","size","callback","response","console","log","sendOTP","phoneNumber","appVerifier","signInWithPhoneNumber","then","confirmationResult","catch","error","verifyOTP","otp","confirm","result","user","authentication"],"sources":["C:/Users/MCOM/Desktop/DATN/fullstack/frontend/src/utils/firebase.js"],"sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport { getAuth } from 'firebase/auth'\r\nimport { initializeApp } from 'firebase/app'\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC6BDR8vZuUHiqt7VQkhLJ3pxYroNNjntA\",\r\n  authDomain: \"ecom-chat-1d35c.firebaseapp.com\",\r\n  projectId: \"ecom-chat-1d35c\",\r\n  storageBucket: \"ecom-chat-1d35c.appspot.com\",\r\n  messagingSenderId: \"517909678281\",\r\n  appId: \"1:517909678281:web:ee31dcdc6180e6a3cee518\",\r\n  measurementId: \"G-3X0P8VH3KR\"\r\n};\r\n\r\n// Initialize Firebase\r\n// firebase.initializeApp(firebaseConfig)\r\n// export default firebase;\r\n// export const authentication = getAuth(initializeApp(firebaseConfig))\r\n\r\n\r\n// Thiết lập reCAPTCHA để xác thực OTP\r\nconst setupRecaptcha = () => {\r\n  window.recaptchaVerifier = new RecaptchaVerifier(auth, 'recaptcha-container', {\r\n    size: 'invisible',\r\n    callback: (response) => {\r\n      console.log(\"reCAPTCHA resolved\", response);\r\n    }\r\n  });\r\n};\r\n\r\n// Hàm gửi OTP đến số điện thoại\r\nexport const sendOTP = (phoneNumber) => {\r\n  setupRecaptcha();\r\n  const appVerifier = window.recaptchaVerifier;\r\n\r\n  signInWithPhoneNumber(auth, phoneNumber, appVerifier)\r\n    .then(confirmationResult => {\r\n      window.confirmationResult = confirmationResult;\r\n      console.log(\"OTP sent to\", phoneNumber);\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error sending OTP:\", error);\r\n    });\r\n};\r\n\r\n// Hàm xác thực OTP\r\nexport const verifyOTP = (otp) => {\r\n  if (window.confirmationResult) {\r\n    window.confirmationResult.confirm(otp)\r\n      .then((result) => {\r\n        console.log(\"User signed in successfully:\", result.user);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"OTP verification failed:\", error);\r\n      });\r\n  } else {\r\n    console.error(\"No OTP confirmation available.\");\r\n  }\r\n};\r\n\r\nexport default firebase;\r\nexport const authentication = auth;"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,iCAFS;EAGrBC,SAAS,EAAE,iBAHU;EAIrBC,aAAa,EAAE,6BAJM;EAKrBC,iBAAiB,EAAE,cALE;EAMrBC,KAAK,EAAE,2CANc;EAOrBC,aAAa,EAAE;AAPM,CAAvB,C,CAUA;AACA;AACA;AACA;AAGA;;AACA,MAAMC,cAAc,GAAG,MAAM;EAC3BC,MAAM,CAACC,iBAAP,GAA2B,IAAIC,iBAAJ,CAAsBC,IAAtB,EAA4B,qBAA5B,EAAmD;IAC5EC,IAAI,EAAE,WADsE;IAE5EC,QAAQ,EAAGC,QAAD,IAAc;MACtBC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,QAAlC;IACD;EAJ2E,CAAnD,CAA3B;AAMD,CAPD,C,CASA;;;AACA,OAAO,MAAMG,OAAO,GAAIC,WAAD,IAAiB;EACtCX,cAAc;EACd,MAAMY,WAAW,GAAGX,MAAM,CAACC,iBAA3B;EAEAW,qBAAqB,CAACT,IAAD,EAAOO,WAAP,EAAoBC,WAApB,CAArB,CACGE,IADH,CACQC,kBAAkB,IAAI;IAC1Bd,MAAM,CAACc,kBAAP,GAA4BA,kBAA5B;IACAP,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BE,WAA3B;EACD,CAJH,EAKGK,KALH,CAKSC,KAAK,IAAI;IACdT,OAAO,CAACS,KAAR,CAAc,oBAAd,EAAoCA,KAApC;EACD,CAPH;AAQD,CAZM,C,CAcP;;AACA,OAAO,MAAMC,SAAS,GAAIC,GAAD,IAAS;EAChC,IAAIlB,MAAM,CAACc,kBAAX,EAA+B;IAC7Bd,MAAM,CAACc,kBAAP,CAA0BK,OAA1B,CAAkCD,GAAlC,EACGL,IADH,CACSO,MAAD,IAAY;MAChBb,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CY,MAAM,CAACC,IAAnD;IACD,CAHH,EAIGN,KAJH,CAIUC,KAAD,IAAW;MAChBT,OAAO,CAACS,KAAR,CAAc,0BAAd,EAA0CA,KAA1C;IACD,CANH;EAOD,CARD,MAQO;IACLT,OAAO,CAACS,KAAR,CAAc,gCAAd;EACD;AACF,CAZM;AAcP,eAAe5B,QAAf;AACA,OAAO,MAAMkC,cAAc,GAAGnB,IAAvB"},"metadata":{},"sourceType":"module"}